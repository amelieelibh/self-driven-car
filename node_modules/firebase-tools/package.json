{
  "name": "firebase-tools",
  "version": "3.10.0",
  "description": "Command-Line Interface for Firebase",
  "main": "index.js",
  "bin": {
    "firebase": "./bin/firebase"
  },
  "scripts": {
    "test": "gulp"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/firebase/firebase-tools.git"
  },
  "keywords": [
    "cdn",
    "cli",
    "ssl",
    "cloud",
    "hosting",
    "firebase",
    "realtime",
    "websockets",
    "synchronization"
  ],
  "preferGlobal": true,
  "engines": {
    "node": ">=0.10.0"
  },
  "engineStrict": true,
  "author": {
    "name": "Firebase",
    "url": "https://firebase.google.com/"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/firebase/firebase-tools/issues"
  },
  "files": [
    "bin/**",
    "lib/**",
    "commands/**",
    "templates/**",
    "index.js"
  ],
  "homepage": "https://github.com/firebase/firebase-tools",
  "dependencies": {
    "JSONStream": "^1.2.1",
    "archiver": "^0.16.0",
    "chalk": "^1.1.0",
    "cjson": "^0.3.1",
    "cli-table": "^0.3.1",
    "commander": "^2.8.1",
    "configstore": "^1.2.0",
    "cross-spawn": "^4.0.0",
    "csv-streamify": "^3.0.4",
    "didyoumean": "^1.2.1",
    "es6-set": "^0.1.4",
    "exit-code": "^1.0.2",
    "filesize": "^3.1.3",
    "firebase": "2.x.x",
    "fs-extra": "^0.23.1",
    "fstream-ignore": "^1.0.5",
    "glob": "^7.1.2",
    "google-auto-auth": "^0.7.2",
    "inquirer": "^0.12.0",
    "jsonschema": "^1.0.2",
    "jsonwebtoken": "^7.4.1",
    "lodash": "^4.6.1",
    "open": "^0.0.5",
    "ora": "0.2.3",
    "portfinder": "^0.4.0",
    "progress": "^2.0.0",
    "request": "^2.58.0",
    "rsvp": "^3.0.18",
    "semver": "^5.0.3",
    "superstatic": "^5.0.1",
    "tar": "^3.1.5",
    "tmp": "0.0.27",
    "universal-analytics": "^0.3.9",
    "update-notifier": "^0.5.0",
    "user-home": "^2.0.0",
    "uuid": "^3.0.0",
    "winston": "^1.0.1",
    "@google-cloud/functions-emulator": "^1.0.0-alpha.22"
  },
  "devDependencies": {
    "chai": "^3.0.0",
    "chai-as-promised": "^5.1.0",
    "coveralls": "2.11.2",
    "eslint": "^1.4.1",
    "gulp": "^3.9.0",
    "gulp-eslint": "^1.0.0",
    "gulp-exit": "0.0.2",
    "gulp-istanbul": "^0.10.0",
    "gulp-mocha": "^2.1.2",
    "jshint-stylish": "^2.0.1",
    "nock": "^2.10.0",
    "sinon": "^1.17.4",
    "sinon-as-promised": "^4.0.0",
    "sinon-chai": "^2.8.0"
  },
  "optionalDependencies": {
    "@google-cloud/functions-emulator": "^1.0.0-alpha.22"
  },
  "readme": "# Firebase CLI [![Build Status](https://travis-ci.org/firebase/firebase-tools.svg?branch=master)](https://travis-ci.org/firebase/firebase-tools) [![Coverage Status](https://img.shields.io/coveralls/firebase/firebase-tools.svg?branch=master&style=flat)](https://coveralls.io/r/firebase/firebase-tools) [![NPM version](https://badge.fury.io/js/firebase-tools.svg)](http://badge.fury.io/js/firebase-tools)\n\nThese are the Firebase Command Line Interface (CLI) Tools. They can be used to:\n\n* Deploy code and assets to your Firebase projects\n* Run a local web server for your Firebase Hosting site\n* Interact with data in your Firebase database\n* Import/Export users into/from Firebase Auth\n\nTo get started with the Firebase CLI, read the full list of commands below or check out the [hosting-specific CLI documentation](https://firebase.google.com/docs/hosting/quickstart).\n\n\n## Installation\n\nTo install the Firebase CLI, you first need to [sign up for a Firebase account](https://firebase.google.com/).\n\nThen you need to install [Node.js](http://nodejs.org/) and [npm](https://npmjs.org/). Note that\ninstalling Node.js should install npm as well.\n\nOnce npm is installed, get the Firebase CLI by running the following command:\n\n```bash\nnpm install -g firebase-tools\n```\n\nThis will provide you with the globally accessible `firebase` command.\n\n\n## Commands\n\n**The command `firebase --help` lists the available commands and `firebase <command> --help` shows more details for an individual command.**\n\nIf a command is project-specific, you must either be inside a project directory with an\nactive project alias or specify the Firebase project id with the `-P <project_id>` flag.\n\nBelow is a brief list of the available commands and their function:\n\n### Administrative Commands\n\nCommand | Description\n------- | -----------\n**login** | Authenticate to your Firebase account. Requires access to a web browser.\n**logout** | Sign out of the Firebase CLI.\n**login:ci** | Generate an authentication token for use in non-interactive environments.\n**list** | Print a list of all of your Firebase projects.\n**setup:web** | Print out SDK setup information for the Firebase JS SDK.\n**use** | Set active Firebase project, manage project aliases.\n**open** | Quickly open a browser to relevant project resources.\n**init** | Setup a new Firebase project in the current directory. This command will create a `firebase.json` configuration file in your current directory.\n**help** | Display help information about the CLI or specific commands.\n\nAppend `--no-localhost` to login (i.e., `firebase login --no-localhost`) to copy and paste code instead of starting a local server for authentication. A use case might be if you SSH into an instance somewhere and you need to authenticate to Firebase on that machine. \n\n### Deployment and Local Development\n\nThese commands let you deploy and interact with your Firebase Hosting site.\n\nCommand | Description\n------- | -----------\n**deploy** | Deploys your Firebase project. Relies on `firebase.json` configuration and your local project folder.\n**serve** | Start a local web server with your Firebase Hosting configuration. Relies on `firebase.json`.\n\n### Auth Commands\n\nCommand | Description\n------- | -----------\n**auth:import** | Batch importing accounts into Firebase from data file.\n**auth:export** | Batch exporting accounts from Firebase into data file.\n\nDetailed doc is [here](https://firebase.google.com/docs/cli/auth).\n\n### Database Commands\n\nCommand | Description\n------- | -----------\n**database:get** | Fetch data from the current project's database and display it as JSON. Supports querying on indexed data.\n**database:set** | Replace all data at a specified location in the current project's database. Takes input from file, STDIN, or command-line argument.\n**database:push** | Push new data to a list at a specified location in the current project's database. Takes input from file, STDIN, or command-line argument.\n**database:remove** | Delete all data at a specified location in the current project's database.\n**database:update** | Perform a partial update at a specified location in the current project's database. Takes input from file, STDIN, or command-line argument.\n**database:profile** | Profile database usage and generate a report.\n\n### Cloud Functions Commands\n\nCommand | Description\n------- | -----------\n**functions:log** | Read logs from deployed Cloud Functions.\n**functions:config:set** | Store runtime configuration values for the current project's Cloud Functions.\n**functions:config:get** | Retrieve existing configuration values for the current project's Cloud Functions.\n**functions:config:unset** | Remove values from the current project's runtime configuration.\n**functions:config:clone** | Copy runtime configuration from one project environment to another.\n\n### Hosting Commands\n\nCommand | Description\n------- | -----------\n**hosting:disable** | Stop serving Firebase Hosting traffic for the active project. A \"Site Not Found\" message will be displayed at your project's Hosting URL after running this command.\n\n## Using with CI Systems\n\nThe Firebase CLI requires a browser to complete authentication, but is fully\ncompatible with CI and other headless environments.\n\n1. On a machine with a browser, install the Firebase CLI.\n2. Run `firebase login:ci` to log in and print out a new access token\n   (the current CLI session will not be affected).\n3. Store the output token in a secure but accessible way in your CI system.\n\nThere are two ways to use this token when running Firebase commands:\n\n1. Store the token as the environment variable `FIREBASE_TOKEN` and it will\n   automatically be utilized.\n2. Run all commands with the `--token <token>` flag in your CI system.\n\nThe order of precedence for token loading is flag, environment variable, active project.\n\nOn any machine with the Firebase CLI, running `firebase logout --token <token>`\nwill immediately revoke access for the specified token.\n\n## Using as a Module\n\nThe Firebase CLI can also be used programmatically as a standard Node module. Each command is exposed as a function that takes an options object and returns a Promise. For example:\n\n```js\nvar client = require('firebase-tools');\nclient.list().then(function(data) {\n  console.log(data);\n}).catch(function(err) {\n  // handle error\n});\n\nclient.deploy({\n  project: 'myfirebase',\n  token: process.env.FIREBASE_TOKEN,\n  cwd: '/path/to/project/folder'\n}).then(function() {\n  console.log('Rules have been deployed!')\n}).catch(function(err) {\n  // handle error\n});\n```\n",
  "readmeFilename": "README.md",
  "_id": "firebase-tools@3.10.0",
  "_from": "firebase-tools@*"
}
