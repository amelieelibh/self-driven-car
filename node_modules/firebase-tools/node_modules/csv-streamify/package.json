{
  "name": "csv-streamify",
  "version": "3.0.4",
  "description": "Streaming CSV Parser. Made entirely out of streams.",
  "author": {
    "name": "Clemens Stolle"
  },
  "main": "csv-streamify.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "standard && mocha -R spec"
  },
  "bin": {
    "csv-streamify": "cli.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/klaemo/csv-stream"
  },
  "keywords": [
    "csv",
    "parser",
    "stream",
    "cli"
  ],
  "license": "BSD-2-Clause",
  "dependencies": {
    "through2": "2.0.1"
  },
  "devDependencies": {
    "csv-spectrum": "^1.0.0",
    "mocha": "^2.3.3",
    "standard": "^7.1.0",
    "string-to-stream": "^1.0.1"
  },
  "engines": {
    "node": ">=0.12.0"
  },
  "readme": "csv-streamify [![Build Status](https://travis-ci.org/klaemo/csv-stream.svg?branch=master)](https://travis-ci.org/klaemo/csv-stream)\n===\n[![NPM](https://nodei.co/npm/csv-streamify.png?downloadRank=true)](https://nodei.co/npm/csv-streamify/)\n\nParses csv files. Accepts options. No coffee script, no weird APIs. Just streams. Tested against [csv-spectrum](https://github.com/maxogden/csv-spectrum) and used in production.\nIt is also \"fast enough\" (around 60,000 rows per second, but that varies with data obviously).\n\nWorks in node `0.12`, `4`, `5` and `6`. Might work in node `0.10`, but is not tested in it.\n\n## Installation\n\n```\nnpm install csv-streamify\n```\n\n## Usage\n\nThis module implements a simple node [stream.Transform](http://nodejs.org/api/stream.html#stream_class_stream_transform) stream.\nYou can write to it, read from it and use `.pipe` as you would expect.\n\n```javascript\nconst csv = require('csv-streamify')\nconst fs = require('fs')\n\nconst parser = csv()\n\n// emits each line as a buffer or as a string representing an array of fields\nparser.on('data', function (line) {\n  console.log(line)\n})\n\n// now pipe some data into it\nfs.createReadStream('/path/to/file.csv').pipe(parser)\n```\n\n### with options and callback\n\nThe first argument can either be an options object (see below) or a callback function.\n\n__Note:__ If you pass a callback to `csv-streamify` it will buffer the parsed data for you and\npass it to the callback when it's done. This behaviour can obviously lead to out of memory errors with very large csv files.\n\n```javascript\nconst csv = require('csv-streamify')\nconst fs = require('fs')\n\nconst parser = csv({ objectMode: true }, function (err, result) {\n  if (err) throw err\n  // our csv has been parsed succesfully\n  result.forEach(function (line) { console.log(line) })\n})\n\n// now pipe some data into it\nfs.createReadStream('/path/to/file.csv').pipe(parser)\n```\n\n### Options\n\nYou can pass some options to the parser. **All of them are optional**.\n\nThe options are also passed to the underlying transform stream, so you can pass in any standard node core stream options.\n\n```javascript\n{\n  delimiter: ',', // comma, semicolon, whatever\n  newline: '\\n', // newline character (use \\r\\n for CRLF files)\n  quote: '\"', // what's considered a quote\n  empty: '', // empty fields are replaced by this,\n\n  // if true, emit arrays instead of stringified arrays or buffers\n  objectMode: false,\n\n  // if set to true, uses first row as keys -> [ { column1: value1, column2: value2 }, ...]\n  columns: false\n}\n```\n\nAlso, take a look at [iconv-lite](https://github.com/ashtuchkin/iconv-lite) (`npm install iconv-lite --save`), it provides pure javascript streaming character encoding conversion.\n\n## CLI\n\nTo use on the command line install it globally:\n\n```bash\n$ npm install csv-streamify -g\n```\n\nThis should add the `csv-streamify` command to your `$PATH`.\n\nThen, you either pipe data into it or give it a filename:\n\n```bash\n# pipe data in\n$ cat some_data.csv | csv-streamify\n# pass a filename\n$ csv-streamify some_data.csv > output.json\n# tell csv-streamify to read from + wait on stdin\n$ csv-streamify -\n```\n\n## Wishlist\n\n- browser support\n- better CLI\n\nIf you would like to contribute either of those just open an issue so we can discuss it further. :)\n\n## Contributors\n\n[Nicolas Hery](https://github.com/nicolashery) (objectMode)\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/klaemo/csv-stream/issues"
  },
  "homepage": "https://github.com/klaemo/csv-stream",
  "_id": "csv-streamify@3.0.4",
  "_from": "csv-streamify@>=3.0.4 <4.0.0"
}
